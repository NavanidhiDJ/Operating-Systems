#include <stdio.h>
#include <stdbool.h>

#define MAX 10

int alloc[MAX][MAX], request[MAX][MAX], avail[MAX], work[MAX];
bool finish[MAX];
int n, m;

void input() {
    printf("Enter number of processes: ");
    scanf("%d", &n);
    printf("Enter number of resource types: ");
    scanf("%d", &m);

    printf("Enter Allocation Matrix (%d x %d):\n", n, m);
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            scanf("%d", &alloc[i][j]);

    printf("Enter Request Matrix (%d x %d):\n", n, m);  // This is the "need"
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            scanf("%d", &request[i][j]);

    printf("Enter Available Resources:\n");
    for (int i = 0; i < m; i++)
        scanf("%d", &avail[i]);
}

void detectDeadlock() {
    for (int i = 0; i < m; i++)
        work[i] = avail[i];

    for (int i = 0; i < n; i++) {
        bool isZero = true;
        for (int j = 0; j < m; j++) {
            if (alloc[i][j] != 0) {
                isZero = false;
                break;
            }
        }
        finish[i] = isZero;
    }

    bool changed;
    do {
        changed = false;
        for (int i = 0; i < n; i++) {
            if (!finish[i]) {
                bool canProceed = true;
                for (int j = 0; j < m; j++) {
                    if (request[i][j] > work[j]) {
                        canProceed = false;
                        break;
                    }
                }
                if (canProceed) {
                    for (int j = 0; j < m; j++)
                        work[j] += alloc[i][j];
                    finish[i] = true;
                    changed = true;
                }
            }
        }
    } while (changed);

    // Check if any process is still unfinished
    bool deadlock = false;
    printf("\nProcesses in Deadlock: ");
    for (int i = 0; i < n; i++) {
        if (!finish[i]) {
            printf("P%d ", i);
            deadlock = true;
        }
    }

    if (!deadlock)
        printf("None. System is not in deadlock.\n");
    else
        printf("\nDeadlock detected.\n");
}

int main() {
    input();
    detectDeadlock();
    return 0;
}
